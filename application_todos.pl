#!/usr/bin/perl

# This script is even more poopier than Jeff's. It's quite amazing how badly I suck at perl. 
# Instructions: ./application_todos.pl < 2.x/todo.gnome
#               Copy generated file into web-devel-2/content/dotplan
#		Curse Gman for creating such a hassle
#		Drink more beer
#
# CopyMiddle: glynn.foster@sun.com

$outputfile = "gnome2_application_todos.html";

open OUTPUTFILE, ">$outputfile" or die "Cannot open $outputfile for writing - $! \n";

print OUTPUTFILE qq {
<h1>GNOME 2.0 Application Status [TODO]</h1>
<P>
Please note that this document will be autogenerated from the release team's notes. As 
items get finished the will be marked from <B>incomplete</B> [denoted by a 
<img src="stock_button_cancel.png">] to <B>complete</B> [denoted by a 
<img src="stock_button_apply.png">]. This document is work in progress.
</P>
<table cellspacing="0" cellpadding="4" width="100%">
};

$linecount = 0;
@linecolour = '#eeeeee', '#ffffff';

while (<STDIN>) {
	chomp ($_);

        if ($_ eq "" || $_ =~ /^#/) {
                # ignore comments or blanks
                next;
	} elsif ($_ =~ /^<application/) {
		$myline = $_;
		# We need to get application name and print
		$application = &get_application_name ($myline);
		$link = &get_application_link ($myline);
		if ($link eq "") {
			$link = "#";
		}
		$authors = &get_authors ($myline);
		print OUTPUTFILE qq {
<!-- ## Start application :: $application ## -->
<tr bgcolor="#666666">
	<td colspan="2">
	<table width="100%">
		<tr>
		<td width="80%"><font color="ffffff" size="4"><B>$application<B>&nbsp;&nbsp;<small>[$authors]</small></font></td>
		<td width="20%" align="right"><small>[<a href="$link">TODO List</a>]</small></td>
		</tr>
	</table>
	</td>
</tr>
};
		next;
	} elsif ($_ =~ /^<\/application/) {
		# We need to print space
		print OUTPUTFILE qq {
<tr bgcolor="">
	<td colspan="2" align="left" valign="top">\&nbsp\;</td>
</tr>
<!-- ## End application :: $application ## -->
};
		next;
	} elsif ($_ =~ /^<item/) {
		# dunno yet
		$flag = &get_item_flag ($_);
		$backgroundcolour = $linecolour[$linecount % 2];
		print OUTPUTFILE qq {
<!-- ## Start item ## -->
<tr bgcolor="$backgroundcolour">
	<td align="left" valign="top">
};
		if ($flag =~ /yes/) {
			print OUTPUTFILE qq {
	<img src="stock_button_apply.png">
};
		} else {
			print OUTPUTFILE qq {
	<img src="stock_button_cancel.png">
};
		} 
		print OUTPUTFILE qq {
	</td>
	<td align="left" valign="top">
};
		next;
	} elsif ($_ =~ /^<\/item/) {
		$linecount++;
		print OUTPUTFILE qq {
	</td>
</tr>
<!-- ## End item ## -->
};
		# Increment the count
	} else {
		# Just print stuff out
		print OUTPUTFILE $_;
	}

}

print OUTPUTFILE qq {
</table>
};
close (OUTPUTFILE);

# ICK! - I can't write perl nor regular expressions

sub get_application_name {
  $line = @_[0];
  $line =~ /(name="(.*?)+")/;
  $line = $1; 
  $line =~ s/name=//;
  $line =~ s/"//g;
  return $line;
}

sub get_item_flag {
  $line = @_[0];
  $line =~ /"(.*?)+"/;
  $line = $1;
  $line =~ s/"//g;
  return $line;
}

sub get_application_link {
  $line = @_[0];
  $line =~ /(link="http:\/\/(.*?)+")/;
  $line = $1;
  $line =~ s/link=//;
  $line =~ s/"//g;
  return $line;
}

sub get_authors {
  $line = @_[0];
  $line =~ /(authors="(.*?)+")/;
  $line = $1;
  $line =~ s/authors=//;
  $line =~ s/"//g;
  $line =~ s/@/.at./g;
  return $line;
}
