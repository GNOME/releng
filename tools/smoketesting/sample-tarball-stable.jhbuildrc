# -*- mode: python -*-

# edit this file to match your settings, backup your ~/.jhbuildrc, and then
# copy this there

# what module set should be used.  The default at the moment is 'gnome28',
# but it can be any of the files in the modulesets directory, or even
# the URL of a module set file on a web server.
moduleset = 'gnome-2.18.0'

# A list of the modules to build.  Defaults to the Gnome Desktop and
# developer platform.
modules = [ 'meta-gnome-desktop' ]

# what directory should the source be checked out to?
checkoutroot = os.path.join(os.environ['HOME'], 'cvs', 'tarball-gnome2')

# the prefix to configure/install modules to (must have write access)
prefix = '/opt/tarball-gnome2'

# extra arguments to pass to all autogen.sh scripts
# to speed up builds of gnome2, try '--disable-static --disable-gtk-doc'
autogenargs='--disable-static --disable-gtk-doc '

# set CFLAGS:
os.environ['CFLAGS'] = '-g -O2'
# set only if you have more than one CPU
# might break some builds
#makeargs = '-j2'


# a alternative install program to use.
# The included install-check program won't update timestamps if the
# header hasn't changed
os.environ['INSTALL'] = os.path.join(os.environ['HOME'],
                                     'bin', 'install-check')

# An alternative location to look for (or download to) all downloaded tarballs
tarballdir = os.path.join(checkoutroot, 'pkgs')


########## Workarounds ##########

# Totem seems to stupidly try to install its plugin under /usr even if that's
# not $PREFIX.  So, we'll disable the mozilla plugin.  Those wanting to build
# it can remove this module_autogenargs comamnd and run
#   chmod a+w /usr/lib/mozilla-1.7.12/plugins
# before the build.  When the build is finished, you can run
#   chmod a-w /usr/lib/mozilla-1.7.12/plugins
# to set things back to normal.
module_autogenargs['totem'] = autogenargs + '--disable-mozilla'

# For those that don't have SDL installed and don't have a webcam, uncomment
# the following line to skip building ekiga
#skip.append('ekiga')

# libxml2, libxslt, and gamin are totally inconsistent with the rest of Gnome
# about python.  See
# http://mail.gnome.org/archives/garnome-list/2005-July/msg00199.html
#
# WARNING: This will probably fail if you don't do a jhbuild bootstrap
# first to make sure that jhbuild installs python-2.4 in the prefix
#
os.environ['PYTHON'] = os.path.join(prefix, 'bin/python')
os.environ['PYTHONPATH'] = os.path.join(prefix, 'lib/python2.4/site-packages')

# fix opal build (ugly)
os.environ['PWLIBDIR'] = os.path.join(checkoutroot, 'pwlib-1.10.2')

# set up the mono Global Application Cache prefix to the jhbuild prefix
os.environ['MONO_GAC_PREFIX'] = prefix

# evolution-exchange requires evolution-data-server to be configured
# with ldap enabled, which it isn't by default.  That would also
# require ldap development libraries, but I have no exchange server to
# test with anyway.  So I just skip it.
skip.append('evolution-exchange')

# jhbuild no longer automatically looks in /usr/lib/pkgconfig, so we need to
# tell it to do so
addpath('PKG_CONFIG_PATH', '/usr/lib/pkgconfig')
